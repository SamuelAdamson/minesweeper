@*
	Mode Selection UI Component
	Samuel Adamson
*@
@using Microsoft.AspNetCore.Components.Web;
@using minesweeper.Models.CustomEventArgs;

<div class="ModeUI">
	<div class="btn-group btn-group-lg" role="group" aria-label="Mode Selection">
		@foreach (Mode mode in modes)
		{
			<button @onclick="(() => OnClick(mode))" class="btn mode @mode.Status">@mode.Name</button>
		}
	</div>
</div>

@code {
	// Events
	public event EventHandler<ModeEventArgs>? ModeChange;

	// Mode struct
	private class Mode
	{
		// Constructor for mode
		public Mode(string name, bool selected)
		{
			// Set values
			Name = name;
			this.selected = selected;
			this.status = selected ? "selected" : "unselected";
		}

		// Private membes
		private bool selected;
		private string status;

		// Access control
		public string Name { get; }
		public string Status { get { return this.status; } }
		public bool Selected
		{
			get { return selected; }
			set
			{
				// Update status along with selected value
				selected = value;
				status = value ? "selected" : "unselected";
			}
		}
	}

	// List of modes and selected mode
	Mode[] modes =
			{
			new Mode("easy", true),
			new Mode("medium", false),
			new Mode("hard", false)
		};
	Mode selectedMode;

	/// <summary>
	/// ModeUI Constructor
	/// </summary>
	public ModeUI()
	{
		selectedMode = modes[0]; // Set selected mode
	}

	/// <summary>
	/// On Mode Click
	/// </summary>
	/// <param name="clickedMode"> Clicked Mode </param>
	private void OnClick(Mode clickedMode)
	{
		if(!clickedMode.Selected) // Check mode not clicked
		{
			// Raise mode change
			RaiseModeChange(clickedMode.Name);

			// Deselect old mode and select new
			selectedMode.Selected = false;
			clickedMode.Selected = true;
			selectedMode = clickedMode;
		}
	}

	/// <summary>
	/// Raise Change of Mode
	/// </summary>
	/// <param name="newMode"> New Mode String </param>
	protected virtual void RaiseModeChange(string newMode)
	{
		// Raise event
		ModeChange?.Invoke(this, new ModeEventArgs(newMode));
	}
}
